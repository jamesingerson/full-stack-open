{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { mergeOptions } from \"../../core/index.js\";\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useMutation(mutation, options) {\n  var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n\n  var _a = useState({\n    called: false,\n    loading: false,\n    client: client\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var ref = useRef({\n    result: result,\n    mutationId: 0,\n    isMounted: true,\n    client: client,\n    mutation: mutation,\n    options: options\n  });\n  {\n    Object.assign(ref.current, {\n      client: client,\n      options: options,\n      mutation: mutation\n    });\n  }\n  var execute = useCallback(function (executeOptions) {\n    if (executeOptions === void 0) {\n      executeOptions = {};\n    }\n\n    var _a = ref.current,\n        client = _a.client,\n        options = _a.options,\n        mutation = _a.mutation;\n\n    var baseOptions = __assign(__assign({}, options), {\n      mutation: mutation\n    });\n\n    if (!ref.current.result.loading && !baseOptions.ignoreResults) {\n      setResult(ref.current.result = {\n        loading: true,\n        error: void 0,\n        data: void 0,\n        called: true,\n        client: client\n      });\n    }\n\n    var mutationId = ++ref.current.mutationId;\n    var clientOptions = mergeOptions(baseOptions, executeOptions);\n    return client.mutate(clientOptions).then(function (response) {\n      var _a, _b, _c;\n\n      var data = response.data,\n          errors = response.errors;\n      var error = errors && errors.length > 0 ? new ApolloError({\n        graphQLErrors: errors\n      }) : void 0;\n\n      if (mutationId === ref.current.mutationId && !clientOptions.ignoreResults) {\n        var result_1 = {\n          called: true,\n          loading: false,\n          data: data,\n          error: error,\n          client: client\n        };\n\n        if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n          setResult(ref.current.result = result_1);\n        }\n      }\n\n      (_b = (_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onCompleted) === null || _b === void 0 ? void 0 : _b.call(_a, response.data);\n      (_c = executeOptions.onCompleted) === null || _c === void 0 ? void 0 : _c.call(executeOptions, response.data);\n      return response;\n    }).catch(function (error) {\n      var _a, _b, _c, _d;\n\n      if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n        var result_2 = {\n          loading: false,\n          error: error,\n          data: void 0,\n          called: true,\n          client: client\n        };\n\n        if (!equal(ref.current.result, result_2)) {\n          setResult(ref.current.result = result_2);\n        }\n      }\n\n      if (((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError) || clientOptions.onError) {\n        (_c = (_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onError) === null || _c === void 0 ? void 0 : _c.call(_b, error);\n        (_d = executeOptions.onError) === null || _d === void 0 ? void 0 : _d.call(executeOptions, error);\n        return {\n          data: void 0,\n          errors: error\n        };\n      }\n\n      throw error;\n    });\n  }, []);\n  var reset = useCallback(function () {\n    setResult({\n      called: false,\n      loading: false,\n      client: client\n    });\n  }, []);\n  useEffect(function () {\n    ref.current.isMounted = true;\n    return function () {\n      ref.current.isMounted = false;\n    };\n  }, []);\n  return [execute, __assign({\n    reset: reset\n  }, result)];\n}","map":{"version":3,"mappings":"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","names":["__assign","useCallback","useEffect","useRef","useState","mergeOptions","equal","DocumentType","verifyDocumentType","ApolloError","useApolloClient","useMutation","mutation","options","client","Mutation","_a","called","loading","result","setResult","ref","mutationId","isMounted","Object","assign","current","execute","executeOptions","baseOptions","ignoreResults","error","data","clientOptions","mutate","then","response","_b","_c","errors","length","graphQLErrors","result_1","onCompleted","call","catch","_d","result_2","onError","reset"],"sources":["C:/Users/jamesi/Desktop/Repos/full-stack-open/part8/library-frontend/node_modules/@apollo/client/react/hooks/useMutation.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { mergeOptions, } from \"../../core/index.js\";\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useMutation(mutation, options) {\n    var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n    verifyDocumentType(mutation, DocumentType.Mutation);\n    var _a = useState({\n        called: false,\n        loading: false,\n        client: client,\n    }), result = _a[0], setResult = _a[1];\n    var ref = useRef({\n        result: result,\n        mutationId: 0,\n        isMounted: true,\n        client: client,\n        mutation: mutation,\n        options: options,\n    });\n    {\n        Object.assign(ref.current, { client: client, options: options, mutation: mutation });\n    }\n    var execute = useCallback(function (executeOptions) {\n        if (executeOptions === void 0) { executeOptions = {}; }\n        var _a = ref.current, client = _a.client, options = _a.options, mutation = _a.mutation;\n        var baseOptions = __assign(__assign({}, options), { mutation: mutation });\n        if (!ref.current.result.loading && !baseOptions.ignoreResults) {\n            setResult(ref.current.result = {\n                loading: true,\n                error: void 0,\n                data: void 0,\n                called: true,\n                client: client,\n            });\n        }\n        var mutationId = ++ref.current.mutationId;\n        var clientOptions = mergeOptions(baseOptions, executeOptions);\n        return client.mutate(clientOptions).then(function (response) {\n            var _a, _b, _c;\n            var data = response.data, errors = response.errors;\n            var error = errors && errors.length > 0\n                ? new ApolloError({ graphQLErrors: errors })\n                : void 0;\n            if (mutationId === ref.current.mutationId &&\n                !clientOptions.ignoreResults) {\n                var result_1 = {\n                    called: true,\n                    loading: false,\n                    data: data,\n                    error: error,\n                    client: client,\n                };\n                if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n                    setResult(ref.current.result = result_1);\n                }\n            }\n            (_b = (_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onCompleted) === null || _b === void 0 ? void 0 : _b.call(_a, response.data);\n            (_c = executeOptions.onCompleted) === null || _c === void 0 ? void 0 : _c.call(executeOptions, response.data);\n            return response;\n        }).catch(function (error) {\n            var _a, _b, _c, _d;\n            if (mutationId === ref.current.mutationId &&\n                ref.current.isMounted) {\n                var result_2 = {\n                    loading: false,\n                    error: error,\n                    data: void 0,\n                    called: true,\n                    client: client,\n                };\n                if (!equal(ref.current.result, result_2)) {\n                    setResult(ref.current.result = result_2);\n                }\n            }\n            if (((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError) || clientOptions.onError) {\n                (_c = (_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onError) === null || _c === void 0 ? void 0 : _c.call(_b, error);\n                (_d = executeOptions.onError) === null || _d === void 0 ? void 0 : _d.call(executeOptions, error);\n                return { data: void 0, errors: error };\n            }\n            throw error;\n        });\n    }, []);\n    var reset = useCallback(function () {\n        setResult({ called: false, loading: false, client: client });\n    }, []);\n    useEffect(function () {\n        ref.current.isMounted = true;\n        return function () {\n            ref.current.isMounted = false;\n        };\n    }, []);\n    return [execute, __assign({ reset: reset }, result)];\n}\n"]},"metadata":{},"sourceType":"module"}