{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jamesi\\\\Desktop\\\\Repos\\\\full-stack-open\\\\part8\\\\library-frontend\\\\src\\\\components\\\\NewBook.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewBook = props => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [published, setPublished] = useState('');\n  const [genre, setGenre] = useState('');\n  const [genres, setGenres] = useState([]);\n\n  if (!props.show) {\n    return null;\n  }\n\n  const submit = async event => {\n    event.preventDefault();\n    console.log('add book...');\n    setTitle('');\n    setPublished('');\n    setAuthor('');\n    setGenres([]);\n    setGenre('');\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setTitle(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"author\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: author,\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setAuthor(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"published\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: published,\n          onChange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setPublished(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: genre,\n          onChange: _ref4 => {\n            let {\n              target\n            } = _ref4;\n            return setGenre(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addGenre,\n          type: \"button\",\n          children: \"add genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"genres: \", genres.join(' ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"create book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewBook, \"GN7pj2HiThKbQELw0EFHLItUhlI=\");\n\n_c = NewBook;\nexport default NewBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewBook\");","map":{"version":3,"sources":["C:/Users/jamesi/Desktop/Repos/full-stack-open/part8/library-frontend/src/components/NewBook.js"],"names":["useState","NewBook","props","title","setTitle","author","setAuthor","published","setPublished","genre","setGenre","genres","setGenres","show","submit","event","preventDefault","console","log","addGenre","concat","target","value","join"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\n\r\nconst NewBook = (props) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [published, setPublished] = useState('')\r\n  const [genre, setGenre] = useState('')\r\n  const [genres, setGenres] = useState([])\r\n\r\n  if (!props.show) {\r\n    return null\r\n  }\r\n\r\n  const submit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    console.log('add book...')\r\n\r\n    setTitle('')\r\n    setPublished('')\r\n    setAuthor('')\r\n    setGenres([])\r\n    setGenre('')\r\n  }\r\n\r\n  const addGenre = () => {\r\n    setGenres(genres.concat(genre))\r\n    setGenre('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submit}>\r\n        <div>\r\n          title\r\n          <input\r\n            value={title}\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          author\r\n          <input\r\n            value={author}\r\n            onChange={({ target }) => setAuthor(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          published\r\n          <input\r\n            type=\"number\"\r\n            value={published}\r\n            onChange={({ target }) => setPublished(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            value={genre}\r\n            onChange={({ target }) => setGenre(target.value)}\r\n          />\r\n          <button onClick={addGenre} type=\"button\">\r\n            add genre\r\n          </button>\r\n        </div>\r\n        <div>genres: {genres.join(' ')}</div>\r\n        <button type=\"submit\">create book</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewBook\r\n"]},"metadata":{},"sourceType":"module"}