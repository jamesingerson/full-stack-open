{"ast":null,"code":"import { dep } from \"optimism\";\nimport { Slot } from \"@wry/context\";\nexport var cacheSlot = new Slot();\nvar cacheInfoMap = new WeakMap();\n\nfunction getCacheInfo(cache) {\n  var info = cacheInfoMap.get(cache);\n\n  if (!info) {\n    cacheInfoMap.set(cache, info = {\n      vars: new Set(),\n      dep: dep()\n    });\n  }\n\n  return info;\n}\n\nexport function forgetCache(cache) {\n  getCacheInfo(cache).vars.forEach(function (rv) {\n    return rv.forgetCache(cache);\n  });\n}\nexport function recallCache(cache) {\n  getCacheInfo(cache).vars.forEach(function (rv) {\n    return rv.attachCache(cache);\n  });\n}\nexport function makeVar(value) {\n  var caches = new Set();\n  var listeners = new Set();\n\n  var rv = function (newValue) {\n    if (arguments.length > 0) {\n      if (value !== newValue) {\n        value = newValue;\n        caches.forEach(function (cache) {\n          getCacheInfo(cache).dep.dirty(rv);\n          broadcast(cache);\n        });\n        var oldListeners = Array.from(listeners);\n        listeners.clear();\n        oldListeners.forEach(function (listener) {\n          return listener(value);\n        });\n      }\n    } else {\n      var cache = cacheSlot.getValue();\n\n      if (cache) {\n        attach(cache);\n        getCacheInfo(cache).dep(rv);\n      }\n    }\n\n    return value;\n  };\n\n  rv.onNextChange = function (listener) {\n    listeners.add(listener);\n    return function () {\n      listeners.delete(listener);\n    };\n  };\n\n  var attach = rv.attachCache = function (cache) {\n    caches.add(cache);\n    getCacheInfo(cache).vars.add(rv);\n    return rv;\n  };\n\n  rv.forgetCache = function (cache) {\n    return caches.delete(cache);\n  };\n\n  return rv;\n}\n\nfunction broadcast(cache) {\n  if (cache.broadcastWatches) {\n    cache.broadcastWatches();\n  }\n}","map":{"version":3,"mappings":"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","names":["dep","Slot","cacheSlot","cacheInfoMap","WeakMap","getCacheInfo","cache","info","get","set","vars","Set","forgetCache","forEach","rv","recallCache","attachCache","makeVar","value","caches","listeners","newValue","arguments","length","dirty","broadcast","oldListeners","Array","from","clear","listener","getValue","attach","onNextChange","add","delete","broadcastWatches"],"sources":["C:/Users/jamesi/Desktop/Repos/full-stack-open/part8/library-frontend/node_modules/@apollo/client/cache/inmemory/reactiveVars.js"],"sourcesContent":["import { dep } from \"optimism\";\nimport { Slot } from \"@wry/context\";\nexport var cacheSlot = new Slot();\nvar cacheInfoMap = new WeakMap();\nfunction getCacheInfo(cache) {\n    var info = cacheInfoMap.get(cache);\n    if (!info) {\n        cacheInfoMap.set(cache, info = {\n            vars: new Set,\n            dep: dep(),\n        });\n    }\n    return info;\n}\nexport function forgetCache(cache) {\n    getCacheInfo(cache).vars.forEach(function (rv) { return rv.forgetCache(cache); });\n}\nexport function recallCache(cache) {\n    getCacheInfo(cache).vars.forEach(function (rv) { return rv.attachCache(cache); });\n}\nexport function makeVar(value) {\n    var caches = new Set();\n    var listeners = new Set();\n    var rv = function (newValue) {\n        if (arguments.length > 0) {\n            if (value !== newValue) {\n                value = newValue;\n                caches.forEach(function (cache) {\n                    getCacheInfo(cache).dep.dirty(rv);\n                    broadcast(cache);\n                });\n                var oldListeners = Array.from(listeners);\n                listeners.clear();\n                oldListeners.forEach(function (listener) { return listener(value); });\n            }\n        }\n        else {\n            var cache = cacheSlot.getValue();\n            if (cache) {\n                attach(cache);\n                getCacheInfo(cache).dep(rv);\n            }\n        }\n        return value;\n    };\n    rv.onNextChange = function (listener) {\n        listeners.add(listener);\n        return function () {\n            listeners.delete(listener);\n        };\n    };\n    var attach = rv.attachCache = function (cache) {\n        caches.add(cache);\n        getCacheInfo(cache).vars.add(rv);\n        return rv;\n    };\n    rv.forgetCache = function (cache) { return caches.delete(cache); };\n    return rv;\n}\nfunction broadcast(cache) {\n    if (cache.broadcastWatches) {\n        cache.broadcastWatches();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}